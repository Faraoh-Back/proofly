       Fresh unicode-ident v1.0.19
       Fresh proc-macro2 v1.0.101
       Fresh quote v1.0.40
       Fresh serde_core v1.0.225
       Fresh memchr v2.7.5
       Fresh syn v2.0.106
       Fresh itoa v1.0.15
       Fresh ryu v1.0.20
       Fresh autocfg v1.5.0
       Fresh serde_derive v1.0.225
       Fresh serde_json v1.0.145
       Fresh strsim v0.11.1
       Fresh ident_case v1.0.1
       Fresh serde v1.0.225
       Fresh fnv v1.0.7
       Fresh thiserror-impl v1.0.69
       Fresh crate-git-revision v0.0.6
       Fresh darling_core v0.20.11
       Fresh darling_macro v0.20.11
       Fresh thiserror v1.0.69
       Fresh darling v0.20.11
       Fresh base32 v0.4.0
       Fresh semver v1.0.27
       Fresh serde_with_macros v3.14.0
       Fresh version_check v0.9.5
       Fresh stellar-strkey v0.0.8
       Fresh serde_with v3.14.0
       Fresh hex v0.4.3
       Fresh typenum v1.18.0
       Fresh generic-array v0.14.7
       Fresh either v1.15.0
       Fresh rustc_version v0.4.1
       Fresh equivalent v1.0.2
       Fresh itertools v0.11.0
       Fresh hashbrown v0.15.5
       Fresh block-buffer v0.10.4
       Fresh crypto-common v0.1.6
       Fresh indexmap v2.11.3
       Fresh soroban-env-macros v21.2.1
       Fresh num-derive v0.4.2
       Fresh wasmparser v0.116.1
       Fresh digest v0.10.7
       Fresh base64 v0.13.1
       Fresh cfg-if v1.0.3
       Fresh cpufeatures v0.2.17
       Fresh escape-bytes v0.1.1
       Fresh num-traits v0.2.19
       Fresh stellar-xdr v21.2.0
       Fresh sha2 v0.10.9
       Fresh prettyplease v0.2.37
       Fresh soroban-spec v21.7.7
       Fresh num-integer v0.1.46
       Fresh static_assertions v1.1.0
       Fresh ethnum v1.5.2
       Fresh soroban-env-common v21.2.1
       Fresh num-bigint v0.4.6
       Fresh soroban-spec-rust v21.7.7
       Fresh bytes-lit v0.0.5
       Fresh soroban-env-guest v21.2.1
       Fresh soroban-sdk-macros v21.7.7
       Fresh soroban-sdk v21.7.7
   Compiling badgecontract v0.1.0 (/home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract)
     Running `/home/allanrpereira/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name event_contract --edition=2021 src/event_contract.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type cdylib --emit=dep-info,link -C opt-level=z -C panic=abort -C lto -C codegen-units=1 -C overflow-checks=on --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=6b3ee16218774755 --out-dir /home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract/target/wasm32-unknown-unknown/release/deps --target wasm32-unknown-unknown -C strip=symbols -L dependency=/home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract/target/wasm32-unknown-unknown/release/deps -L dependency=/home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract/target/release/deps --extern soroban_sdk=/home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract/target/wasm32-unknown-unknown/release/deps/libsoroban_sdk-a3c2c161d2d72705.rlib`
warning: unused imports: `BytesN` and `map`
 --> src/event_contract.rs:4:49
  |
4 |     Address, Bytes, Env, Map, String, Vec, vec, map, log, symbol_short, BytesN
  |                                                 ^^^                     ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0308]: mismatched types
   --> src/event_contract.rs:107:23
    |
107 |             token_id: token_id.clone(),
    |                       ^^^^^^^^^^^^^^^^ expected `Bytes`, found `Hash<32>`
    |
    = note: expected struct `soroban_sdk::Bytes`
               found struct `soroban_sdk::crypto::Hash<32>`
help: call `Into::into` on this expression to convert `soroban_sdk::crypto::Hash<32>` into `soroban_sdk::Bytes`
    |
107 |             token_id: token_id.clone().into(),
    |                                       +++++++

error[E0308]: mismatched types
   --> src/event_contract.rs:117:54
    |
117 |         env.storage().persistent().set(&DataKey::NFT(token_id.clone()), &nft);
    |                                         ------------ ^^^^^^^^^^^^^^^^ expected `Bytes`, found `Hash<32>`
    |                                         |
    |                                         arguments to this enum variant are incorrect
    |
    = note: expected struct `soroban_sdk::Bytes`
               found struct `soroban_sdk::crypto::Hash<32>`
note: tuple variant defined here
   --> src/event_contract.rs:38:5
    |
38  |     NFT(Bytes),
    |     ^^^
help: call `Into::into` on this expression to convert `soroban_sdk::crypto::Hash<32>` into `soroban_sdk::Bytes`
    |
117 |         env.storage().persistent().set(&DataKey::NFT(token_id.clone().into()), &nft);
    |                                                                      +++++++

error[E0308]: mismatched types
   --> src/event_contract.rs:118:61
    |
118 |         env.storage().persistent().set(&DataKey::TokenOwner(token_id.clone()), &recipient);
    |                                         ------------------- ^^^^^^^^^^^^^^^^ expected `Bytes`, found `Hash<32>`
    |                                         |
    |                                         arguments to this enum variant are incorrect
    |
    = note: expected struct `soroban_sdk::Bytes`
               found struct `soroban_sdk::crypto::Hash<32>`
note: tuple variant defined here
   --> src/event_contract.rs:40:5
    |
40  |     TokenOwner(Bytes),
    |     ^^^^^^^^^^
help: call `Into::into` on this expression to convert `soroban_sdk::crypto::Hash<32>` into `soroban_sdk::Bytes`
    |
118 |         env.storage().persistent().set(&DataKey::TokenOwner(token_id.clone().into()), &recipient);
    |                                                                             +++++++

error[E0308]: mismatched types
   --> src/event_contract.rs:124:32
    |
124 |         owner_tokens.push_back(token_id.clone());
    |                      --------- ^^^^^^^^^^^^^^^^ expected `Bytes`, found `Hash<32>`
    |                      |
    |                      arguments to this method are incorrect
    |
    = note: expected struct `soroban_sdk::Bytes`
               found struct `soroban_sdk::crypto::Hash<32>`
note: method defined here
   --> /home/allanrpereira/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/soroban-sdk-21.7.7/src/vec.rs:537:12
    |
537 |     pub fn push_back(&mut self, x: T) {
    |            ^^^^^^^^^
help: call `Into::into` on this expression to convert `soroban_sdk::crypto::Hash<32>` into `soroban_sdk::Bytes`
    |
124 |         owner_tokens.push_back(token_id.clone().into());
    |                                                +++++++

error[E0308]: mismatched types
   --> src/event_contract.rs:138:12
    |
138 |         Ok(token_id)
    |         -- ^^^^^^^^ expected `Bytes`, found `Hash<32>`
    |         |
    |         arguments to this enum variant are incorrect
    |
    = note: expected struct `soroban_sdk::Bytes`
               found struct `soroban_sdk::crypto::Hash<32>`
help: the type constructed contains `soroban_sdk::crypto::Hash<32>` due to the type of the argument passed
   --> src/event_contract.rs:138:9
    |
138 |         Ok(token_id)
    |         ^^^--------^
    |            |
    |            this argument influences the type of `Ok`
note: tuple variant defined here
   --> /rustc/29483883eed69d5fb4db01964cdf2af4d86e9cb2/library/core/src/result.rs:552:5
help: call `Into::into` on this expression to convert `soroban_sdk::crypto::Hash<32>` into `soroban_sdk::Bytes`
    |
138 |         Ok(token_id.into())
    |                    +++++++

error[E0599]: no method named `retain` found for struct `soroban_sdk::Vec` in the current scope
   --> src/event_contract.rs:178:21
    |
178 |         from_tokens.retain(|t| t != &token_id);
    |                     ^^^^^^ method not found in `soroban_sdk::Vec<soroban_sdk::Bytes>`

error[E0284]: type annotations needed
   --> src/event_contract.rs:237:42
    |
237 |         match env.storage().persistent().get(&DataKey::TokenOwner(token_id)) {
    |                                          ^^^ cannot infer type of the type parameter `V` declared on the method `get`
    |
    = note: cannot satisfy `<_ as TryFromVal<Env, soroban_sdk::Val>>::Error == _`
help: consider specifying the generic arguments
    |
237 |         match env.storage().persistent().get::<DataKey, V>(&DataKey::TokenOwner(token_id)) {
    |                                             ++++++++++++++

Some errors have detailed explanations: E0284, E0308, E0599.
For more information about an error, try `rustc --explain E0284`.
warning: `badgecontract` (lib) generated 1 warning
error: could not compile `badgecontract` (lib) due to 7 previous errors; 1 warning emitted

Caused by:
  process didn't exit successfully: `/home/allanrpereira/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name event_contract --edition=2021 src/event_contract.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type cdylib --emit=dep-info,link -C opt-level=z -C panic=abort -C lto -C codegen-units=1 -C overflow-checks=on --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=6b3ee16218774755 --out-dir /home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract/target/wasm32-unknown-unknown/release/deps --target wasm32-unknown-unknown -C strip=symbols -L dependency=/home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract/target/wasm32-unknown-unknown/release/deps -L dependency=/home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract/target/release/deps --extern soroban_sdk=/home/allanrpereira/Documentos/Projetos/Meridian/proofly/Contrato/contracts/event_contract/target/wasm32-unknown-unknown/release/deps/libsoroban_sdk-a3c2c161d2d72705.rlib` (exit status: 1)
